---
import '../styles/global.css'
---
<div class="search-container w-full h-full min-h-[20vh] flex justify-center items-center p-8"> 
    <div class="search-bar-box shadow-[0_0_1px] rounded-[10px] overflow-visible h-[28px] relative">
        <form>
            <input type="text" name="search" placeholder="Search..." autocomplete="off" class="w-[60vw] h-[28px] rounded-[10px] shadow-[0_0_1px] outline-none p-1">
        </form>
        <div class="suggestion z-[10] bg-white shadow-[0_0_1px] hidden">
            <ul></ul>
        </div>
    </div>  
</div>

<script>
    const input = document.querySelector('input') as HTMLInputElement
    const suggestion = document.querySelector('.suggestion') as HTMLDivElement
    const suggestionList = document.querySelector('.suggestion ul') as HTMLUListElement
    const searchBarBox = document.querySelector('.search-bar-box') as HTMLDivElement

    // ------------------- function for suggestion to appear and disappear ------------------------

    let isActive = false
    
    if (input) {
        input.addEventListener('focus', () => {
            isActive = true
            suggestion.classList.remove('hidden')
            input.classList.add('rounded-b-none')
            searchBarBox.classList.add('rounded-b-none')
            if (isActive) {
                taskList.forEach((task: string) => {
                    const listItem = document.createElement('li')
                    listItem.classList.add('hover:bg-gray-100', 'hover:opacity-80', 'p-1')
                    listItem.textContent = task
                    suggestionList.appendChild(listItem)
                })
            }
        })
        input.addEventListener('blur', () => {
            isActive = false
            suggestion.classList.add('hidden')
            input.classList.remove('rounded-b-none')
            searchBarBox.classList.remove('rounded-b-none')
        })
    }

    // ----------------------- dynamic suggestion change based on the keyword ------------------------

    const taskList = ['wash dish', 'go to school', 'prepare lunch', 'sing a song', 'write a letter', 'walk dog', 'wash car', 'take a nap', 'read a book', 'watch a movie', 'drink water', 'open a SNS', 'make an app', 'go outside', 'push up', 'running', 'do something good']

    input.addEventListener('input', (e) => {
        const target = e.currentTarget as HTMLInputElement
        const keywords = target.value.replace(/\s+/g, '').toLowerCase().split('')
        suggestionList.innerHTML = ''

        input.classList.add('rounded-b-none')
        searchBarBox.classList.add('rounded-b-none')

        if (keywords.length === 0) {
            suggestionList.innerHTML = ''
        }
        
        let taskFound = taskList.filter(task => {
            const taskChars = task.replace(/\s+/g, '').toLowerCase().split('')
            return keywords.every(char => {
                const index = taskChars.indexOf(char)
                if (index !== -1) {
                    taskChars.splice(index, 1)
                    return true
                } else {
                    return false
                }
            })
        })

        if (taskFound.length > 0) {
            taskFound.forEach((task: string) => {
                const listItem = document.createElement('li')
                listItem.classList.add('hover:bg-gray-100', 'hover:opacity-80', 'p-1')
                listItem.textContent = task
                suggestionList.appendChild(listItem)
            })
        } else {
            const listItem = document.createElement('li')
            listItem.classList.add('p-1')
            listItem.textContent = 'No results found'
            suggestionList.appendChild(listItem)
        }
    })

    // ------------------------------- open modal function -----------------------------------

    const taskForModal = document.querySelectorAll('.suggestion ul li') as NodeListOf<HTMLLIElement>
    
    taskForModal.forEach((task) => {
        task.addEventListener('click', () => {
            
        })
    })

    
</script>